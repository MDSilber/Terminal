%option reentrant
%option bison-bridge
%option bison-locations
%option noyywrap

%{
#import "MMParserContext.h"
#import "y.tab.h"
#define YY_USER_ACTION yylloc->first_line = yylineno;
#define YY_EXTRA_TYPE MMParserCtx*

#define YY_INPUT(buf, bytesRead, maxSize) \
	{ \
        MMParserContext *parserContext = [MMParserContext parserForContext:yyextra]; \
        if (parserContext) { \
            bytesRead = [parserContext inputToBuffer:buf maxBytesToRead:maxSize]; \
        } else { \
            bytesRead = YY_NULL; \
        } \
    }
%}

WS [ \t]+
EXCLUDECOMMANDJOIN [^\\ \t\";&<>|]

%%

\; {
    [MMParserContext incrementCurrentPosition:yyleng];
    return SEMICOLON;
}

\| {
    [MMParserContext incrementCurrentPosition:yyleng];
    return PIPE;
}

& {
    [MMParserContext incrementCurrentPosition:yyleng];
    return AMPERSAND;
}

&& {
    [MMParserContext incrementCurrentPosition:yyleng];
    return DOUBLE_AMPERSAND;
}

> {
    [MMParserContext incrementCurrentPosition:yyleng];
    return GREATER_THAN;
}

\< {
    [MMParserContext incrementCurrentPosition:yyleng];
    return LESS_THAN;
}

\|\| {
    [MMParserContext incrementCurrentPosition:yyleng];
    return DOUBLE_PIPE;
}

((\\.|{EXCLUDECOMMANDJOIN})|(\"(\\.|[^\\"])*\"))+ {
    NSString *result = [NSString stringWithUTF8String:yytext];
    [MMParserContext incrementCurrentPosition:result.length];
    [MMParserContext storeObject:result];
    [MMParserContext setEnd:[MMParserContext currentPosition] forToken:result];
    yylval->node = result;
    return WORD;
}

{WS} {
    [MMParserContext incrementCurrentPosition:yyleng];
}

. {
    /* empty */
}

%%